<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				width="100%" height="100%"
				creationComplete="init(event)">
	
	<fx:Script>
		<![CDATA[
			import actionscripts.DataProviders;
			import actionscripts.DataProvidersEvent;
			
			import components.SuperGrid.SuperGrid;
			import components.SuperGrid.contenedorSt;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			[Bindable] public var item:Object = new Object();	
			[Bindable] public var strAccion:String="";
			[Bindable] public var huboCambios:Boolean=false;
			[Bindable] public var _padreContenedor:contenedorSt;
			[Bindable] public var _padreSuperGrid:SuperGrid;
			
			private var flagFiltrar:Boolean = false;
			
			protected function init(event:FlexEvent):void
			{
				try{
					_padreContenedor.allowMaximize=false;
					_padreContenedor.allowResize=false;
					
					loader.dp.cargaLoader(this);
					cambiaRegistro();
					loader.dp.removeLoader();
					
				}catch(ex:Error){
					loader.msgAviso("stciudades->init() ",3,ex);
				}
			}
			
			//FUNCION QUE LLENA LOS COMBOS
			private function llenarCombo(evt:DataProvidersEvent):void{
				try{
					//arrFamilias.source = Utils.clone(loader.dp.arrFamilias.source);		
					
					// Ciudades
					//var arr1:ArrayCollection = new ArrayCollection();
					//arr1.source = DataProviders.insertarSource(Utils.clone(loader.dp.arrCiudades),new ObjectProxy({clave_ciudad:'',ciudad:'Sin Seleccionar'}));
					//arr1.refresh();
					//cbxCiudad.dataProvider = arr1;	
					//cbxCiudad.labelField = "ciudad";
					
					if(strAccion=="EDITAR" || strAccion=="COPIAR"){
						cambiaRegistro();
					}
					
				}catch(ex:Error){
					loader.msgAviso("Error->LlenarCombo",3,ex);
				}
				
				// Quitamos Loader
				loader.dp.removeLoader();
				
				
				//Remover listener de dataproviders
				evt.target.removeEventListener( evt.type, arguments.callee );
			}
			
			public function cerrar():void{
				_padreContenedor.cerrar();
			}
			
			public function cambiaRegistro():void{
				huboCambios = false;
				// Buscar Ciudad
				DataProviders.selectedIndexCombo(cbxTipoPersona,'clave',item.tipo_persona);
				
				huboCambios=false;
			}
			
			/********** VALIDA Y GUARDA **********/
			public function validar():void{
				var errores:String="";				
				//if(StringUtil.trim(txtClaveCiudad.text)==""){      errores+="- Ingrese la clave.\n"; }
				//if(cbxEntidadFederativa.selectedIndex<=0){      errores+="- Ingrese el Estado.\n"; }
				//if(cbxLocalidad.selectedIndex<0&&cbxLocalidad.selectedItem.nombrelocalidad.toString()!='Sin Seleccionar'){      errores+="- Ingrese el municipio.\n"; }
				//if(StringUtil.trim(txtNombreCiudad.text)==""){ errores+="- Ingrese el nombre de la Localidad.\n"; }
				//if(StringUtil.trim(txtDirectorlocalidad.text)==""){ errores+="- Ingrese el nombre del director de Ciudad.\n"; }
				
				if(errores==""){
					guardar();					
				}else{	
					loader.msgAviso(errores,2);
				}
				
			}
			
			private function guardar():void{
				if(strAccion=="NUEVO" || strAccion=="COPIAR")  loader.dp.cargaService(ws_nuevo_registro);
				if(strAccion=="EDITAR") loader.dp.cargaService(ws_edita_registro);
				
			}
			/********** VALIDA Y GUARDA **********/
			
			
			
			
			
			
			
			/******** RESULT HANDLERS *********/
			public function resultGuardar(event:ResultEvent):void{
				this.parentApplication.enabled=true;
				var tipo:String    = (strAccion=="NUEVO" || strAccion=="COPIAR") ? "guardada"        : "editada";
				var ws:HTTPService = (strAccion=="NUEVO" || strAccion=="COPIAR") ? ws_nuevo_registro : ws_edita_registro;
				
				switch(StringUtil.trim(event.result.toString())){
					case "ok":
						huboCambios = false;
						loader.msgAviso("El Cliente fue "+tipo+" correctamente.");
						//loader.dp.hacerWS(['ciudades'],true);
						_padreSuperGrid.buscaRespuestas();
						cerrar();						
						break;
					
					case "yaexiste":
						loader.msgAviso("El Cliente ya existe",2);
						break;
					
					default:
						if(loader.debug){
							loader.msgAviso(StringUtil.trim(event.result.toString()),3);	
						}else{
							loader.dp.reintentarHttpService("Ocurrió un problema al realizar la operación",ws,event);
						}
				}
				
			}
			/******** RESULT HANDLERS *********/
			
		]]>
	</fx:Script>
	<mx:VBox width="100%">
		<mx:Form width="100%">
			<mx:FormItem label="Clave Cliente:" width="100%">
				<mx:TextInput id="txtClaveCliente" text="{item.clave_cliente}"/>
			</mx:FormItem>
			<mx:FormItem label="Nombre Cliente:" width="100%">
				<mx:TextInput id="txtNombreCliente" text="{item.nombre}"/>
			</mx:FormItem>
			<mx:FormItem label="Tipo de Persona:" width="100%">
				<mx:ComboBox id="cbxTipoPersona" prompt="Sin Seleccionar" labelField="Label">
					<mx:dataProvider>
						<fx:Object clave="0" Label="Sin Seleccionar"/>
						<fx:Object clave="1" Label="Persona Fisica"/>
						<fx:Object clave="2" Label="Persona Moral"/>
					</mx:dataProvider>
				</mx:ComboBox>
			</mx:FormItem>
		</mx:Form>
	</mx:VBox>
	
	<fx:Declarations>
		<mx:HTTPService showBusyCursor="true" id="ws_nuevo_registro" method="POST" resultFormat="text" requestTimeout="30" 
						fault="loader.dp.faultHandler(event)" result="{resultGuardar(event);loader.dp.removeLoader()}" 
						invoke="loader.dp.cargaLoader(this)" url="{loader.strHostUrl}ws_empresas.php">
			<mx:request>
				<opcion>GUARDA_REGISTRO</opcion>			
				<clave_cliente>{txtClaveCliente.text}</clave_cliente>
				<nombre_cliente>{txtNombreCliente.text}</nombre_cliente>
				<tipo_persona>{cbxTipoPersona.selectedItem.clave}</tipo_persona>
			</mx:request>
		</mx:HTTPService>
		
		<mx:HTTPService showBusyCursor="true" id="ws_edita_registro" method="POST" resultFormat="text" requestTimeout="30" 
						fault="loader.dp.faultHandler(event)" result="{resultGuardar(event);loader.dp.removeLoader()}" 
						invoke="loader.dp.cargaLoader(this)" url="{loader.strHostUrl}ws_empresas.php">
			<mx:request>
				<opcion>EDITA_REGISTRO</opcion>			
				<clave_cliente>{txtClaveCliente.text}</clave_cliente>
				<nombre_cliente>{txtNombreCliente.text}</nombre_cliente>
				<tipo_persona>{cbxTipoPersona.selectedItem.clave}</tipo_persona>
			</mx:request>
		</mx:HTTPService>
	</fx:Declarations>
</mx:VBox>
