<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="vertical" width="100%" height="100%" 
		   xmlns:SuperGrid="components.SuperGrid.*"
		   creationComplete="init(event)">
	<fx:Script>
		<![CDATA[
			import actionscripts.DataProviders;
			import actionscripts.DataProvidersEvent;
			import actionscripts.Iconos;
			import actionscripts.Serializer;
			import actionscripts.Utils;
			
			import flex_modulos.Nomina.comps.stNomina;
			
			import mx.collections.ICollectionView;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.containers.FormItem;
			import mx.controls.Alert;
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.events.CollectionEvent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.DragManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectProxy;
			import mx.validators.Validator;
		//	public function getCatalogoSt():stProyectos{
		//		return new stProyectos;
		//	}
			
			private var ServicesHandler:HTTPService;
			[Bindable] private var validatorArr:Array;
			private var abcSort:Sort = new Sort();
			
			[Bindable] public var strExportar:String="";
			
			[Bindable] public var offset:int=0;			  //Variable de control para el offset entre querys (NO EDITABLE)
			[Bindable] private var pagsmostradas:int = 5; //total de botones de paginacion
			[Bindable] private var inipags:int = 1;       //primer boton de paginacion
			[Bindable] private var regsporpag:int = 40;  //total de registros mostrados por pagina
			[Bindable] private var totalregs:int = 0;     //total de paginas
			
			protected function init(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				//	loader.dp.revisaPermisosGrid(gridResultados,"proyectos_consultar","proyectos_crear","proyectos_editar","proyectos_borrar","proyectos_copiar","proyectos_imprimir");
				loader.dp.addEventListener(DataProvidersEvent.COMPLETEDP, llenarCombo);
				//initValidators();
				loader.dp.hacerWS(['periodonomina']);
				ws_filtrar.send();
				
				ACNominas2.addEventListener(CollectionEvent.COLLECTION_CHANGE,lblTotalUpdate);
			}
			
			//FUNCION QUE LLENA LOS COMBOS
			private function llenarCombo(evt:DataProvidersEvent):void{
				try{
					var arr1:ArrayCollection = new ArrayCollection();
					arr1 = Utils.clone(loader.dp.arrPeriodoNommina);
					arr1.refresh();
					cbxPeriodo.dataProvider = arr1;
					cbxPeriodo.labelField = "texto";
				}catch(ex:Error){
					loader.msgAviso("Error->LlenarCombo",3,ex);
				}
				
				// Quitamos Loader
				loader.dp.removeLoader();
				
				
				//Remover listener de dataproviders
				evt.target.removeEventListener( evt.type, arguments.callee );
			}
			
			private function faultHandler(evento:FaultEvent):void{
				trace(evento.message);
				this.parentApplication.enabled=true;
				ServicesHandler=new HTTPService;
				ServicesHandler=evento.target as HTTPService;
				Alert.yesLabel="Reintentar";
				Alert.noLabel="Cancelar";
				Alert.buttonWidth=100;        	
				Alert.show("Ocurrió un error con la conexión.","ERROR",Alert.YES|Alert.NO,null,errorHandler,Iconos.MESSAGEBOX_ERROR16,Alert.OK);
				
			}
			
			
			public function llenarGridPlanteles(evt:ResultEvent):void{
				totalregs = parseInt(evt.result.tablas.tabla0.numrows.total);
				var pags:int;
				if(totalregs%regsporpag == 0){
					pags = (int(totalregs/regsporpag));
				}
				else{
					pags = (int(totalregs/regsporpag)+1);
				}
								
				ACNominas = Utils.getRows(evt.result.tablas,"tabla0");
				abcSort.fields=[new SortField('nombrelargo')];
				
				for(var i:int=0; i<ACNominas.length; i++){
					nformarter.format(ACNominas[i].importetotal);
				}
				
				//nformarter.format(ACNominas.[importe]);
				ACNominas.sort=abcSort;
				ACNominas.refresh();
				dgNom.dataProvider = ACNominas;	
				lblTotalDG1.text = ACNominas.length+"";
			}
			
			private function errorHandler(evento:Object):void{
				if(evento.detail == Alert.YES) {
					ServicesHandler.send();	
				}
				if(evento.detail == Alert.NO) {
					ServicesHandler=new HTTPService();
				}
			}
			
			protected function dobleclicl_borrar(event:MouseEvent):void
			{
				
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show(Utils.print_r(ACNominas.source),"Source");
				Alert.show(ACNominas.length+"","Length");
				//ICollectionView
				//Alert.show(Utils.print_r(ACNominas.I),"Source");
			}
			
			protected function btnDG2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show(Utils.print_r(ACNominas2.source),"Source");
				Alert.show(ACNominas2.length+"","Length");
			}
			
			protected function lblTotalUpdate(event:CollectionEvent):void{
				lblTotalDG1.text = ACNominas.length+"";
				lblTotalDG2.text = ACNominas2.length+"";
			}
			
			protected function btnAgregar_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//Alert.show("Agregar");
				var nuevoReg:stNomina = new stNomina();
				nuevoReg._padre = this;
				PopUpManager.addPopUp(nuevoReg,this,true);
				PopUpManager.centerPopUp(nuevoReg);
			}
			
			protected function btnEliminar_clickHandler(event:MouseEvent):void
			{
				Alert.show(Utils.print_r(dgNom2.dataProvider));
			}
			
			private function lbfImporteTotal(item:Object, column:DataGridColumn):String {
				return (nformarter.format(item.importetotal) + "");
			}
			
			protected function ws_getperiodo_resultHandler(event:ResultEvent):void
			{
				var arr1:ArrayCollection = new ArrayCollection();
				arr1.source = DataProviders.insertarSource(event.result as ArrayCollection,new ObjectProxy({}));
				arr1.refresh();
				
				cbxPeriodo.dataProvider = arr1.source;
				//ACNominas = Utils.getRows(evt.result.tablas,"tabla0");
			}
			
			protected function exportarCVS(event:MouseEvent):void
			{
				if(dtfFecha.text!="" ){
					dtfFecha.errorString="";
					strExportar = Serializer.serialize(ACNominas2.source);
					
					var url:String =loader.strHostUrl+"ws_nominas.php";
					var request:URLRequest = new URLRequest(url);
					var variables:URLVariables = new URLVariables();
					variables.tiporeporte = "CSV";
					//variables.tiporeporte='XLS';
					variables.arrtablas= strExportar;
					variables.fecha=dtfFecha.text;
					//variables.strDatos= strDatos;
					request.data = variables;
					request.method = URLRequestMethod.POST;
					navigateToURL(request,"_blank");
				}else{
					Alert.show("Fecha Requerida", "Error",4,null,null,Iconos.MESSAGEBOX_ERROR);
					dtfFecha.errorString="Fecha Requerida";
				}
			}
			
			private function exportXLS ():void{
				
			}
			
			protected function initValidators():void{
				validatorArr = new Array();  
				validatorArr.push(svFecha);
			}
			
			private function validateForm(evt:MouseEvent):void {
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					exportarCVS(evt);
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					Alert.show(errorMessageArray.join("\n\n"), "Invalid form...", Alert.OK);
				}
			}
			
		]]>
	</fx:Script>
	
	<!-- GRID PAGINADO -->
	<mx:Panel backgroundColor="#ffffff" width="100%" height="100%" layout="vertical" title="Nominas" horizontalAlign="left" verticalAlign="top" paddingTop="5"  >		
		<!--<SuperGrid:SuperGrid id="gridResultados"  wordWrap="true" tituloReporte="Nominas" showBtnImprimir="false" searchOnInit="true"
							 _arrColumnas="{columnasGrid}" _wsFiltrar="{ws_traerProyectos}" _padreCatalogo="{this}"
							 isCatalogo="true" _wsBorrar="{ws_borrarProyectos}"  _idtabla="codigoempleado" />
		-->
		<mx:HBox width="100%">
			<mx:Label text="Periodo"/>
			<mx:ComboBox id="cbxPeriodo" width="250">
				
			</mx:ComboBox>
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:Label text="Fecha de Aplicacion:"/>
			<mx:DateField id="dtfFecha" width="200" formatString="YYYY/MM/DD" showToday="true" />
			<mx:LinkButton label="Exportar" icon="{Iconos.EXPORT16}" click="{exportarCVS(event);}"/>
		</mx:HBox>
		<mx:HBox width="100%" height="100%" paddingLeft="2" paddingRight="2" paddingBottom="2" paddingTop="2">
			<mx:VBox width="100%" height="100%">
				<mx:DataGrid id="dgNom" width="100%" height="100%" dragEnabled="true" dropEnabled="true" dragMoveEnabled="true"
							 allowMultipleSelection="true" allowDragSelection="true">
							 <!--dragDrop="onListDragDrop(event)" dragEnter="onDragEnter(event)" dragOver="onDragOver(event)" 
							 dragExit="onDragExit(event)" -->
					<mx:columns>
						<mx:DataGridColumn dataField="nombrelargo" headerText="Nombre" width="200" />
						<mx:DataGridColumn dataField="importetotal" headerText="Importe" width="80" labelFunction="lbfImporteTotal"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:HBox width="100%">
					<mx:Label text="Total: "/>
					<mx:Label id="lblTotalDG1" text="0"/>
				</mx:HBox>
			</mx:VBox>
			<mx:VBox width="20">
				
			</mx:VBox>
			<mx:VBox width="100%" height="100%">
				<mx:DataGrid id="dgNom2" width="100%" height="100%" dragEnabled="true" dropEnabled="true" dragMoveEnabled="true" 
							 allowDragSelection="true" allowMultipleSelection="true"
							 dataProvider="{ACNominas2}" doubleClickEnabled="true" doubleClick="dobleclicl_borrar(event)">
							 <!--dragDrop="onListDragDrop(event)" dragEnter="onDragEnter(event)" dragOver="onDragOver(event)" 
							 dragExit="onDragExit(event)" -->
							 
					<mx:columns>
						<mx:DataGridColumn dataField="nombrelargo" headerText="Nombre" width="200" />
						<mx:DataGridColumn dataField="importetotal" headerText="Importe" width="80" labelFunction="lbfImporteTotal"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:HBox width="100%">
					<mx:LinkButton id="btnAgregar" icon="{Iconos.ADD16}" toolTip="Agregar" click="btnAgregar_clickHandler(event)"/>
					<mx:LinkButton id="btnEliminar" icon="{Iconos.REMOVE16}" toolTip="Eliminar" click="btnEliminar_clickHandler(event)"/>
					<mx:Label text="Total: "/>
					<mx:Label id="lblTotalDG2" text="0"/>
				</mx:HBox>
			</mx:VBox>
		</mx:HBox>
	</mx:Panel>
	
	<fx:Declarations>
		<fx:Array id="columnasGrid">
			<mx:DataGridColumn dataField="nombrelargo" headerText="Nombre" width="100" />
			<mx:DataGridColumn dataField="importetotal" headerText="Importe" width="100" />
			
		</fx:Array>	
		
		<mx:HTTPService id="ws_filtrar" url="{loader.strHostUrl}ws_nominas.php" result="{llenarGridPlanteles(event)}"
						method="POST" resultFormat="object" fault="faultHandler(event)" requestTimeout="20">
			<mx:request xmlns="">
				<opcion>FILTRAR_NOMINAS</opcion>
			</mx:request>
		</mx:HTTPService>
		
		<mx:HTTPService id="ws_borrarProyectos" url="{loader.strHostUrl}ws_nominas.php">
			<mx:request xmlns="">
				<opcion>FILTRAR_NOMINAS</opcion>
			</mx:request>
		</mx:HTTPService>
		
		<mx:HTTPService id="ws_serializado" url="{loader.strHostUrl}ws_nominas.php" result="ws_getperiodo_resultHandler(event)"
						method="POST" resultFormat="object" fault="faultHandler(event)" requestTimeout="20">
			<mx:request xmlns="">
				<opcion>GET_PERIODO</opcion>
			</mx:request>
		</mx:HTTPService>
		
		<mx:NumberFormatter id="nformarter" precision="2" useThousandsSeparator="true" useNegativeSign="true"/>
		
		<mx:DateValidator id="dvFecha" source="{dtfFecha}" property="text" required="true" requiredFieldError="Seleccionar Fecha"/>
		<mx:StringValidator id="svFecha" source="{dtfFecha}" property="text" required="true" requiredFieldError="Nombre Requerido"/>
		
		<s:ArrayCollection id="ACNominas"/>
		<s:ArrayCollection id="ACNominas2"/>
	</fx:Declarations>
</mx:Module>
