<?xml version="1.0" encoding="utf-8"?>
<actionscripts:SuperPanel xmlns:actionscripts="actionscripts.*" xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="{if(loadOnInit) init()}" 
	close="{cerrarPopUp()}" alpha="1.0" title="Reproductor Multimedia" layout="vertical"  
	allowClose="true" allowDrag="true" allowResize="true" allowMaximize="true" horizontalScrollPolicy="off" verticalScrollPolicy="off"
	keyDown="if(event.keyCode == Keyboard.ESCAPE)cerrarPopUp()"  width="486" height="383"
	backgroundColor="#000000" cornerRadius="9" paddingTop="5" paddingLeft="0" paddingRight="0" paddingBottom="5" 
	styleName="catalogPanel" backgroundAlpha="1.0" xmlns:comps="modulos.comps.*">

<!--
<mx:TitleWindow backgroundColor="#000000" xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="486" height="383" creationComplete="init()" close="cerrarPopUp();" keyDown="if(event.keyCode == Keyboard.ESCAPE)cerrarPopUp()" showCloseButton="true" horizontalScrollPolicy="off" verticalScrollPolicy="off" paddingLeft="0" paddingRight="0" paddingTop="5" paddingBottom="5" headerHeight="18" title="Multimedia">
-->

	<!--
	<mx:states>
		<mx:State name="audio">
		 	<mx:SetProperty target="{contImagen}" name="visible" value="false"/>
         	<mx:SetProperty target="{contImagen}" name="includeInLayout" value="false"/>
         	<mx:SetProperty target="{contMultimedia}" name="visible" value="true"/>
         	<mx:SetProperty target="{contMultimedia}" name="includeInLayout" value="true"/>
		</mx:State>
		
		<mx:State name="video">
		 	<mx:SetProperty target="{contImagen}" name="visible" value="false"/>
         	<mx:SetProperty target="{contImagen}" name="includeInLayout" value="false"/>
         	<mx:SetProperty target="{contMultimedia}" name="visible" value="true"/>
         	<mx:SetProperty target="{contMultimedia}" name="includeInLayout" value="true"/>
		</mx:State>
	   	
	</mx:states>
	-->
	
	
	<mx:Script>
		<![CDATA[
			import mx.rpc.http.mxml.HTTPService;
			
			import components.MultimediaPlayer.mediarenderers.AudioRenderer;
			import components.MultimediaPlayer.events.YouTubeVideoEvent;
			import components.MultimediaPlayer.comps.loadingObject;
			import components.MultimediaPlayer.mediarenderers.VideoRenderer;
			import actionscripts.Iconos;
			import mx.rpc.events.ResultEvent;
			import mx.events.StateChangeEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import actionscripts.Utils;
			
			[Bindable]public var itemRecurso:Object;
			
			[Bindable]public var itemSel:Object;
			
			private var ServicesHandler:HTTPService;
			public var loadingObj:loadingObject;
			
			private var cancelYoutubeVid:Boolean=false;
			private var timerYoutube:Timer;
			
			
			
			[Inspectable(enumeration="mostrar,descargar", defaultValue="mostrar")]
			[Bindable] public var movimiento:String = "mostrar";
			
			[Inspectable(enumeration="video,audio")]
			[Bindable] public var tipo_recurso:String = "";
			
			[Bindable] public var url_recurso:String  = "";
			[Bindable] public var url_correcta:String = "";
			[Bindable] public var titulo:String = "";
			
			
			/*
				oXML.url_recurso = "http://localhost/sidur_saop/video2.flv"; //"http://www.youtube.com/watch?v=JCWFfLJhvaQ";
        		oXML.url_correcta = "";
        		oXML.movimiento = "1";
        		oXML.titulo = "Video Obra";
        		oXML.tipo_recurso = "1";
            */		
            		
            		
			
			[Bindable] public var showTxtTitulo:Boolean = true;
			[Bindable] public var showTxtTime:Boolean = true;
			[Bindable] public var showBtnPlayPause:Boolean = true;			
			[Bindable] public var showBtnVolume:Boolean = true;
			[Bindable] public var showBtnFullScreen:Boolean = true;
			[Bindable] public var showProgressSlider:Boolean = true;
			[Bindable] public var showVideoControl:Boolean = true;
			
			[Bindable] public var loadOnInit:Boolean = true;
			
			public function init():void{	
				this.addEventListener(YouTubeVideoEvent.COMPLETE,onVideoComplete);
				//this.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGE,cambiarEdo);
				if (ExternalInterface.available){
					ExternalInterface.addCallback("setVideoURL",setVideoURL);//AÑADIR AL INIT PARA QUE PUEDA HABER UN LLAMADO DE JAVASCRIPT A FLEX
				}
				getRecursoURL(itemSel);
			}
			
			//FUNCION A LA QUE LLAMA JAVASCRIPT
			public function setVideoURL(url:String): void{
				if(!cancelYoutubeVid){
					
					timerYoutube.stop();
					timerYoutube.removeEventListener(TimerEvent.TIMER, timerHandler);
					if(loadingObj){
						PopUpManager.removePopUp(loadingObj);
					}
					url_correcta = url;
					if(movimiento == "descargar"){
						Utils.goToUrl(url_correcta);
					}
					else{
						dispatchEvent(new YouTubeVideoEvent(YouTubeVideoEvent.COMPLETE, new Object()));	
					}				
				}
			}
			
			/*
			private function cambiarEdo(evt:StateChangeEvent):void{
				
				flash.media.SoundMixer.stopAll();
				
				if(this.currentState==""){
					if(contMultimedia.getChildren().length>0){
        				contMultimedia.removeAllChildren();
        			}
				}
				
				if(this.currentState=="video"){
					/*if(contMultimedia.getChildren().length>0){
        				contMultimedia.removeAllChildren();
        			}
        			
        			var vid:VideoRenderer=new VideoRenderer();
					vid.percentWidth=100;
					vid.percentHeight=100;
					vid.source=itemRecurso.url_correcta;
					vid.titulo=itemRecurso.titulo;
					vid.biblioteca=this;
					contMultimedia.addChild(vid);*/
				/*}
				
				if(this.currentState=="audio"){	
					/*if(contMultimedia.getChildren().length>0){
	    				contMultimedia.removeAllChildren();
	    			}
	    			var sonido:AudioRenderer=new AudioRenderer();
					sonido.percentWidth=100;
					sonido.percentHeight=100;
					sonido.source=itemRecurso.url_correcta;
					sonido.titulo=itemRecurso.titulo;
					sonido.biblioteca=this;
					contMultimedia.addChild(sonido);*/
				/*}
			}*/
			
			public function getRecursoURL(row:Object):void{
	        	//this.currentState="";
	        	if(contMultimedia.getChildren().length>0){
    				contMultimedia.removeAllChildren();
    			}
	        	
	        	
	        	
	        	if(url_recurso != ""){
		        	var cadena:String=String(url_recurso).toLocaleLowerCase();
		        	var ext:String=(cadena.substr(-3)).toLocaleLowerCase();
		        	if((ext.indexOf("mp3")!==-1)||(ext.indexOf("flv")!==-1)){
		        		url_correcta = url_recurso;
		        		dispatchEvent(new YouTubeVideoEvent(YouTubeVideoEvent.COMPLETE, new Object()));
		        		return;
		        	}
		        	
		        	else{
		        		if((cadena.indexOf("youtube")!==-1) &&(cadena.indexOf("watch")!==-1)){
		        			
		        			cancelYoutubeVid=false;
	        			
		        			if (ExternalInterface.available){
								ExternalInterface.call("createApplet",String(url_recurso),Utils.inbtwn(String(url_recurso),"v=", "&"));//QUITAR MODO ESCUCHAR F5, REFRESH, CERRAR VENTANA, ALT F4,ETC
								loadingWindow();
								timerYoutube=new Timer(15000);
								timerYoutube.start();
								timerYoutube.addEventListener(TimerEvent.TIMER, timerHandler);
								
							}
		        			//traer_video_youtube.request={opcion:'TRAER_VIDEO_YOUTUBE',archivo:itemRecurso.url_recurso};
		        			//Utils.checarSesion(traer_video_youtube);
		        			//traer_video_youtube.send({opcion:'TRAER_VIDEO_YOUTUBE',archivo:itemRecurso.url_recurso});
		        			//YouTubeVideo(String(itemRecurso.url_recurso));	
		        			return;		
		        		}	
		        	}
		        	url_correcta = "";
		        	dispatchEvent(new YouTubeVideoEvent(YouTubeVideoEvent.COMPLETE, new Object()));
	  			}
	  			else{
	  				url_correcta = "";
		        	dispatchEvent(new YouTubeVideoEvent(YouTubeVideoEvent.COMPLETE, new Object()));
	  			}
			}
			
			private function timerHandler(evt:TimerEvent):void{
				(evt.target as Timer).stop();
				cancelYoutubeVid=true;
				if(loadingObj){
					PopUpManager.removePopUp(loadingObj);
				}
				evt.target.removeEventListener( evt.type, arguments.callee );
			}
			
			private function loadingWindow():void{
   				loadingObj=new loadingObject;
   				this.stage.focus=null;
				PopUpManager.addPopUp(loadingObj,DisplayObject(this.parentApplication), true);//.parent.parent.parent.parent.parent.parent.parent
				PopUpManager.centerPopUp(loadingObj);
   			}
			
			private function traer_video(evt:ResultEvent):void{
				if(evt.result.toString()=="error"){
					PopUpManager.removePopUp(loadingObj);
					loader.msgAviso("No se encontro el video en el servidor de Youtube, favor de intentar más tarde.",3);					
				}
				else{
					url_correcta = evt.result.toString();
					dispatchEvent(new YouTubeVideoEvent(YouTubeVideoEvent.COMPLETE, new Object()));
				}
			}
			
			private function onVideoComplete(evt:YouTubeVideoEvent):void{
				
				if(loadingObj){
					PopUpManager.removePopUp(loadingObj);
				}
				//Alert.show(itemRecurso.@url_correcta);
				//trace("entre");
				
				
				if(url_correcta!=""){
					switch (tipo_recurso){
		        		case "video":
		        			//this.currentState="video";
		        			
		        			contImagen.visible = false;
				         	contImagen.includeInLayout = false;
				         	contMultimedia.visible = true;
				         	contMultimedia.includeInLayout = true;
		        			
		        			
		        			flash.media.SoundMixer.stopAll();
		        			
		        			if(contMultimedia.getChildren().length>0){
		        				contMultimedia.removeAllChildren();
		        			}
		        			
		        			var vid:VideoRenderer = new VideoRenderer();
							vid.percentWidth  = 100;
							vid.percentHeight = 100;
							vid.source 		  = url_correcta;
							vid.titulo 		  = titulo;
							vid.biblioteca    = this;
							contMultimedia.addChild(vid);
		        		break;
		        		
		        		case "audio":
		        			//this.currentState="audio";
		        			contImagen.visible = false;
				         	contImagen.includeInLayout = false;
				         	contMultimedia.visible = true;
				         	contMultimedia.includeInLayout = true;
				         	
		        			flash.media.SoundMixer.stopAll();
		        			
		        			if(contMultimedia.getChildren().length>0){
			    				contMultimedia.removeAllChildren();
			    			}
			    			var sonido:AudioRenderer = new AudioRenderer();
							sonido.percentWidth  = 100;
							sonido.percentHeight = 100;
							sonido.source 		 = url_correcta;
							sonido.titulo 		 = titulo;
							sonido.biblioteca    = this;
							contMultimedia.addChild(sonido);
		        		break;
		        	}
   				}
			}
			
			private function cerrarPopUp():void{
				flash.media.SoundMixer.stopAll();
				PopUpManager.removePopUp(this);
			}
	
		]]>
	</mx:Script>
	<mx:VBox id="contImagen" width="100%" height="100%" backgroundColor="#000000" horizontalAlign="center" verticalAlign="middle">
		<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" includeInLayout="false" >
			<mx:Image id="img" source="{Iconos.ICON_AV}" horizontalAlign="center" verticalAlign="middle"/>	
		</mx:HBox>
	</mx:VBox>
	
	<mx:VBox backgroundColor="#000000" id="contMultimedia" width="100%" height="100%" includeInLayout="false" visible="false" horizontalAlign="center" verticalAlign="middle"/>
	
	<!--
	<mx:HTTPService showBusyCursor="true" invoke="loadingWindow()" id="traer_video_youtube" method="POST" resultFormat="text" fault="{if(loadingObj!=null){PopUpManager.removePopUp(loadingObj);}this.parentApplication.faultHandler(event);}" result="traer_video(event);" url="http://{Virtual.strHostUrl}/tbrecursos_apoyo_ws.php"/>
	-->

</actionscripts:SuperPanel>
